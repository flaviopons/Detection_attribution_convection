coord_sf(xlim = c(0, 18), ylim = c(40, 50)) +
theme_minimal() +
labs(
title = "500 hPa Geopotential Height with Hail Reports (24 July 2023)",
subtitle = paste("Total hail reports:", nrow(hail_24july)),
caption = "Data: ESSL hail reports + ERA5 z500"
) +
theme(
panel.background = element_rect(fill = "azure"),
legend.position = "right"
)
library(lubridate)
library(ncdf4)
library(raster)
library(sf)
library(dplyr)
library(ggplot2)
library(maps)
library(rnaturalearth)
library(rnaturalearthdata)
setwd('/home/fpons/Desktop/ENGIE/ENGIE_Project/DATA/ESWD')
# read hail data
ESWD_LH_2000_2024 <- read.csv("~/Desktop/ENGIE/ENGIE_Project/DATA/ESWD/1735497550_v1_7_ENGIE-Pons_ESWD domain_LH_20000101_20240706_QC1-2.csv")
names(ESWD_LH_2000_2024)
# check which event ID are repeated more than once
# Count occurrences of each ID
id_counts <- ESWD_LH_2000_2024 %>% count(ID)
# Filter IDs that appear more than once
duplicate_ids <- id_counts %>% filter(n > 1) %>% pull(ID)
# Extract rows with duplicate IDs
duplicate_rows <- ESWD_LH_2000_2024 %>%
filter(ID %in% duplicate_ids)
# If you look at this sorting by ID, it is clear that events with the same ID are years apart
# ID cannot be used to characterize different events, variable to ignore.
range(as.Date(ESWD_LH_2000_2024$TIME_EVENT)) #"2000-01-13" "2024-07-06"
# Impact "I1" refers explicitly to energy infrastructure, however only 6 reports for hailes
# have this code.
length(which(ESWD_LH_2000_2024$IMPACTS=="I1")) #only 2
# 14196 of 53670 total reports have NA max diameter.
summary(ESWD_LH_2000_2024$MAX_HAIL_DIAMETER)
#Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's
#  0.000   2.000   3.000   3.457   4.000  19.000   14196
# There are a total of 8 reports of diameters smaller than 2 cm
length(which(ESWD_LH_2000_2024$MAX_HAIL_DIAMETER>0)) # 0.8
hist(ESWD_LH_2000_2024$MAX_HAIL_DIAMETER[which(ESWD_LH_2000_2024$MAX_HAIL_DIAMETER<1)]) # 0.8
min(ESWD_LH_2000_2024$MAX_HAIL_DIAMETER[ESWD_LH_2000_2024$MAX_HAIL_DIAMETER>0], na.rm = T) # 0.8
# there are data in all of Russia, including Siberia. Also, some reports have unrealistic latitude.
# Remove anything below 30 degrees N and further East than 50E
ind_removed <- c(which(ESWD_LH_2000_2024$LATITUDE<30), which(ESWD_LH_2000_2024$LATITUDE>72),
which(ESWD_LH_2000_2024$LONGITUDE>50), which(ESWD_LH_2000_2024$LONGITUDE<(-25.5)))
hail_data <- ESWD_LH_2000_2024[-ind_removed,]
# Create date variable
hail_data <- hail_data %>%
mutate(date = as.Date(TIME_EVENT),
year = format(date, "%Y"))
# using the ERA5 grid
lon <- seq(from = 0, to = 18, by = 0.25)
lat <- seq(from = 40, to = 50, by = 0.25)
europe_bbox <- c(xmin = min(lon), xmax = max(lon), ymin = min(lat), ymax = max(lat))  # Longitude and latitude
# Map hail data onto the grid
grid <- expand.grid(lon = lon, lat = lat)
hail_sf <- st_as_sf(hail_data, coords = c("LONGITUDE", "LATITUDE"), crs = 4326)
grid_sf <- st_as_sf(grid, coords = c("lon", "lat"), crs = 4326)
nearest_grid_index <- st_nearest_feature(hail_sf, grid_sf)
hail_data$grid_index <- nearest_grid_index
# Filter date
hail_24july <- hail_data %>%
filter(date == as.Date("2023-07-24"))
# convert to sf object
hail_sf_24july <- st_as_sf(hail_24july, coords = c("LONGITUDE", "LATITUDE"), crs = 4326)
# create grid
grid_sf <- st_as_sf(expand.grid(lon = lon, lat = lat),
coords = c("lon", "lat"),
crs = 4326)
highlight_region <- data.frame(
lon = c(9, 14, 14, 9, 9),  # Longitudine (x)
lat = c(45.2, 45.2, 46.2, 46.2, 45.2) # Latitudine (y)
)
ggplot() +
# Disegna la griglia
geom_sf(data = grid_sf, shape = 3, color = "gray80", size = 0.1, alpha = 0.5) +
# Aggiungi confini Europa
geom_sf(data = ne_countries(scale = "medium", returnclass = "sf") %>%
st_crop(europe_bbox),
fill = "lightgray", color = "black") +
# Aggiungi eventi grandine come rombi rossi
geom_sf(data = hail_sf_24july,
shape = 18, color = "red", size = 1.5, alpha = 0.8) +
# Rettangolo evidenziato (VERDE)
geom_polygon(data = highlight_region,
aes(x = lon, y = lat),
color = "green",
fill = NA,
linewidth = 1.2) +
# Zoom sull'area di interesse
coord_sf(xlim = c(0, 18), ylim = c(40, 50)) +
# Stile e titolo
labs(title = "ESSL hail reports, July 24, 2023",
caption = paste("Total reports:", nrow(hail_24july))) +
theme_minimal() +
theme(panel.grid = element_blank(),
panel.background = element_rect(fill = "azure"))
p_z500_event_reports <- p_z500_event +       # 4. Add hail reports (red diamonds)
geom_sf(data = hail_sf_24july,
shape = 18,           # Diamond shape
color = "red",
size = 2,
alpha = 0.8,
show.legend = TRUE) +
# 5. Add green highlight region
geom_polygon(data = highlight_region,
aes(x = lon, y = lat),
color = "green",
fill = NA,
linewidth = 1.2) +
# 6. Coordinate system and styling
coord_sf(xlim = c(0, 18), ylim = c(40, 50)) +
theme_minimal() +
labs(
title = "500 hPa Geopotential Height with Hail Reports (24 July 2023)",
subtitle = paste("Total hail reports:", nrow(hail_24july)),
caption = "Data: ESSL hail reports + ERA5 z500"
) +
theme(
panel.background = element_rect(fill = "azure"),
legend.position = "right"
)
p_z500_event_reports
p_z500_event_reports <- p_z500_event +       # 4. Add hail reports (red diamonds)
geom_sf(data = hail_sf_24july,
shape = 18,           # Diamond shape
color = "red",
size = 2,
alpha = 0.8,
show.legend = TRUE) +
# 5. Add green highlight region
geom_polygon(data = highlight_region,
aes(x = lon, y = lat),
color = "green",
fill = NA,
linewidth = 1.2)
p_z500_event_reports
rlang::last_trace()
library(crayon)
install.packages('crayon')
library(crayon)
p_z500_event_reports <- p_z500_event +       # 4. Add hail reports (red diamonds)
geom_sf(data = hail_sf_24july,
shape = 18,           # Diamond shape
color = "red",
size = 2,
alpha = 0.8,
show.legend = TRUE) +
# 5. Add green highlight region
geom_polygon(data = highlight_region,
aes(x = lon, y = lat),
color = "green",
fill = NA,
linewidth = 1.2)
p_z500_event_reports
rlang::last_trace()
library(fields)
library(maps)
library(RColorBrewer)
library(ggplot2)
library(ggplot2)
library(sf)
library(rnaturalearth)
library(dplyr)
library(crayon)
library(lubridate)
library(ncdf4)
library(raster)
library(sf)
library(dplyr)
library(ggplot2)
library(maps)
library(rnaturalearth)
library(rnaturalearthdata)
# read hail data
ESWD_LH_2000_2024 <- read.csv("~/Desktop/ENGIE/ENGIE_Project/DATA/ESWD/1735497550_v1_7_ENGIE-Pons_ESWD domain_LH_20000101_20240706_QC1-2.csv")
names(ESWD_LH_2000_2024)
# check which event ID are repeated more than once
# Count occurrences of each ID
id_counts <- ESWD_LH_2000_2024 %>% count(ID)
# Filter IDs that appear more than once
duplicate_ids <- id_counts %>% filter(n > 1) %>% pull(ID)
# Extract rows with duplicate IDs
duplicate_rows <- ESWD_LH_2000_2024 %>%
filter(ID %in% duplicate_ids)
range(as.Date(ESWD_LH_2000_2024$TIME_EVENT)) #"2000-01-13" "2024-07-06"
# Impact "I1" refers explicitly to energy infrastructure, however only 6 reports for hailes
# have this code.
length(which(ESWD_LH_2000_2024$IMPACTS=="I1")) #only 2
# 14196 of 53670 total reports have NA max diameter.
summary(ESWD_LH_2000_2024$MAX_HAIL_DIAMETER)
#Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's
#  0.000   2.000   3.000   3.457   4.000  19.000   14196
# There are a total of 8 reports of diameters smaller than 2 cm
length(which(ESWD_LH_2000_2024$MAX_HAIL_DIAMETER>0)) # 0.8
hist(ESWD_LH_2000_2024$MAX_HAIL_DIAMETER[which(ESWD_LH_2000_2024$MAX_HAIL_DIAMETER<1)]) # 0.8
min(ESWD_LH_2000_2024$MAX_HAIL_DIAMETER[ESWD_LH_2000_2024$MAX_HAIL_DIAMETER>0], na.rm = T) # 0.8
# there are data in all of Russia, including Siberia. Also, some reports have unrealistic latitude.
# Remove anything below 30 degrees N and further East than 50E
ind_removed <- c(which(ESWD_LH_2000_2024$LATITUDE<30), which(ESWD_LH_2000_2024$LATITUDE>72),
which(ESWD_LH_2000_2024$LONGITUDE>50), which(ESWD_LH_2000_2024$LONGITUDE<(-25.5)))
hail_data <- ESWD_LH_2000_2024[-ind_removed,]
# Create date variable
hail_data <- hail_data %>%
mutate(date = as.Date(TIME_EVENT),
year = format(date, "%Y"))
# using the ERA5 grid
europe_bbox <- c(xmin = min(lon), xmax = max(lon), ymin = min(lat), ymax = max(lat))  # Longitude and latitude
# Map hail data onto the grid
grid <- expand.grid(lon = lon, lat = lat)
hail_sf <- st_as_sf(hail_data, coords = c("LONGITUDE", "LATITUDE"), crs = 4326)
grid_sf <- st_as_sf(grid, coords = c("lon", "lat"), crs = 4326)
nearest_grid_index <- st_nearest_feature(hail_sf, grid_sf)
hail_data$grid_index <- nearest_grid_index
# Filter date
hail_24july <- hail_data %>%
filter(date == as.Date("2023-07-24"))
# convert to sf object
hail_sf_24july <- st_as_sf(hail_24july, coords = c("LONGITUDE", "LATITUDE"), crs = 4326)
# create grid
grid_sf <- st_as_sf(expand.grid(lon = lon, lat = lat),
coords = c("lon", "lat"),
crs = 4326)
highlight_region <- data.frame(
lon = c(9, 14, 14, 9, 9),  # Longitudine (x)
lat = c(45.2, 45.2, 46.2, 46.2, 45.2) # Latitudine (y)
)
ggplot() +
# Disegna la griglia
geom_sf(data = grid_sf, shape = 3, color = "gray80", size = 0.1, alpha = 0.5) +
# Aggiungi confini Europa
geom_sf(data = ne_countries(scale = "medium", returnclass = "sf") %>%
st_crop(europe_bbox),
fill = "lightgray", color = "black") +
# Aggiungi eventi grandine come rombi rossi
geom_sf(data = hail_sf_24july,
shape = 18, color = "red", size = 1.5, alpha = 0.8) +
# Rettangolo evidenziato (VERDE)
geom_polygon(data = highlight_region,
aes(x = lon, y = lat),
color = "green",
fill = NA,
linewidth = 1.2) +
# Zoom sull'area di interesse
coord_sf(xlim = c(0, 18), ylim = c(40, 50)) +
# Stile e titolo
labs(title = "ESSL hail reports, July 24, 2023",
caption = paste("Total reports:", nrow(hail_24july))) +
theme_minimal() +
theme(panel.grid = element_blank(),
panel.background = element_rect(fill = "azure"))
# 1. Ensure z500_data_event is a data frame with proper column names
z500_data_event <- as.data.frame(z500_data_event) %>%
rename(value = z)  # Make sure the value column is named 'value'
names(z500_data_event) <- c('lon', 'lat', 'z')
# 2. Create the combined plot
combined_plot <- ggplot() +
# Geopotential height background
geom_raster(data = z500_data_event,
aes(x = lon, y = lat, fill = value),
interpolate = TRUE) +
# Color scale for z500
scale_fill_steps2(
name = "Geopotential Height (m)",
low = "blue",
mid = "white",
high = "red",
midpoint = 0,
breaks = seq(floor(M1/20)*20, ceiling(M2/20)*20, by = 20),
limits = c(M1, M2),
guide = guide_colorsteps(barheight = unit(3, "cm"))
) +
# Country borders
geom_sf(data = ne_countries(scale = "medium", returnclass = "sf") %>%
st_crop(europe_bbox),
fill = NA, color = "black") +
# Hail reports (red diamonds)
geom_sf(data = hail_sf_24july,
shape = 18,
color = "red",
size = 2,
alpha = 0.8) +
# Highlight region
geom_polygon(data = highlight_region,
aes(x = lon, y = lat),
color = "green",
fill = NA,
linewidth = 1.2) +
# Coordinate system
coord_sf(xlim = c(0, 18), ylim = c(40, 50)) +
# Titles and theme
labs(title = "500 hPa Geopotential Height with Hail Reports",
subtitle = "24 July 2023",
caption = paste("Total hail reports:", nrow(hail_24july))) +
theme_minimal() +
theme(panel.background = element_rect(fill = "azure"))
combined_plot
names(z500_data_event) <- c('lon', 'lat', 'value')
combined_plot <- p_z500_event +
geom_sf(data = hail_sf_24july,
shape = 18,
color = "red",
size = 2,
alpha = 0.8) +
# Highlight region
geom_polygon(data = highlight_region,
aes(x = lon, y = lat),
color = "green",
fill = NA,
linewidth = 1.2) +
# Titles and theme
labs(title = "500 hPa Geopotential Height with Hail Reports",
subtitle = "24 July 2023",
caption = paste("Total hail reports:", nrow(hail_24july))) +
theme_minimal() +
theme(panel.background = element_rect(fill = "azure"))
combined_plot
p_z500_event
lon
lat
library(lubridate)
library(ncdf4)
library(raster)
library(sf)
library(dplyr)
library(ggplot2)
library(maps)
library(rnaturalearth)
library(rnaturalearthdata)
setwd('/home/fpons/Desktop/ENGIE/ENGIE_Project/DATA/ESWD')
# read hail data
ESWD_LH_2000_2024 <- read.csv("~/Desktop/ENGIE/ENGIE_Project/DATA/ESWD/1735497550_v1_7_ENGIE-Pons_ESWD domain_LH_20000101_20240706_QC1-2.csv")
names(ESWD_LH_2000_2024)
# check which event ID are repeated more than once
# Count occurrences of each ID
id_counts <- ESWD_LH_2000_2024 %>% count(ID)
# Filter IDs that appear more than once
duplicate_ids <- id_counts %>% filter(n > 1) %>% pull(ID)
# Extract rows with duplicate IDs
duplicate_rows <- ESWD_LH_2000_2024 %>%
filter(ID %in% duplicate_ids)
# If you look at this sorting by ID, it is clear that events with the same ID are years apart
# ID cannot be used to characterize different events, variable to ignore.
range(as.Date(ESWD_LH_2000_2024$TIME_EVENT)) #"2000-01-13" "2024-07-06"
# Impact "I1" refers explicitly to energy infrastructure, however only 6 reports for hailes
# have this code.
length(which(ESWD_LH_2000_2024$IMPACTS=="I1")) #only 2
# 14196 of 53670 total reports have NA max diameter.
summary(ESWD_LH_2000_2024$MAX_HAIL_DIAMETER)
length(which(ESWD_LH_2000_2024$MAX_HAIL_DIAMETER>=8)) # 0.8
ind8 <- which(ESWD_LH_2000_2024$MAX_HAIL_DIAMETER>=8)
unique(as.Date(ESWD_LH_2000_2024$TIME_EVENT))
library(lubridate)
library(ncdf4)
library(raster)
library(sf)
library(dplyr)
library(ggplot2)
library(maps)
library(rnaturalearth)
library(rnaturalearthdata)
setwd('/home/fpons/Desktop/ENGIE/ENGIE_Project/DATA/ESWD')
# read hail data
ESWD_LH_2000_2024 <- read.csv("~/Desktop/ENGIE/ENGIE_Project/DATA/ESWD/1735497550_v1_7_ENGIE-Pons_ESWD domain_LH_20000101_20240706_QC1-2.csv")
names(ESWD_LH_2000_2024)
# check which event ID are repeated more than once
# Count occurrences of each ID
id_counts <- ESWD_LH_2000_2024 %>% count(ID)
# Filter IDs that appear more than once
duplicate_ids <- id_counts %>% filter(n > 1) %>% pull(ID)
# Extract rows with duplicate IDs
duplicate_rows <- ESWD_LH_2000_2024 %>%
filter(ID %in% duplicate_ids)
# If you look at this sorting by ID, it is clear that events with the same ID are years apart
# ID cannot be used to characterize different events, variable to ignore.
range(as.Date(ESWD_LH_2000_2024$TIME_EVENT)) #"2000-01-13" "2024-07-06"
# Impact "I1" refers explicitly to energy infrastructure, however only 6 reports for hailes
# have this code.
length(which(ESWD_LH_2000_2024$IMPACTS=="I1")) #only 2
# 14196 of 53670 total reports have NA max diameter.
summary(ESWD_LH_2000_2024$MAX_HAIL_DIAMETER)
#Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's
#  0.000   2.000   3.000   3.457   4.000  19.000   14196
# There are a total of 8 reports of diameters smaller than 2 cm
length(which(ESWD_LH_2000_2024$MAX_HAIL_DIAMETER>0)) # 0.8
length(which(ESWD_LH_2000_2024$MAX_HAIL_DIAMETER>=8)) # 0.8
hist(ESWD_LH_2000_2024$MAX_HAIL_DIAMETER[which(ESWD_LH_2000_2024$MAX_HAIL_DIAMETER<1)]) # 0.8
min(ESWD_LH_2000_2024$MAX_HAIL_DIAMETER[ESWD_LH_2000_2024$MAX_HAIL_DIAMETER>0], na.rm = T) # 0.8
# there are data in all of Russia, including Siberia. Also, some reports have unrealistic latitude.
# Remove anything below 30 degrees N and further East than 50E
ind_removed <- c(which(ESWD_LH_2000_2024$LATITUDE<30), which(ESWD_LH_2000_2024$LATITUDE>72),
which(ESWD_LH_2000_2024$LONGITUDE>50), which(ESWD_LH_2000_2024$LONGITUDE<(-25.5)))
hail_data <- ESWD_LH_2000_2024[-ind_removed,]
# obtain total number of yearly reports
hail_data <- hail_data %>%
mutate(date = as.Date(TIME_EVENT),
year = format(date, "%Y"))
annual_reports_hail <- hail_data %>%
group_by(year) %>%
summarise(total_reports = n())
# plot time series of total report
ggplot(annual_reports_hail, aes(x = year, y = total_reports, group = 1)) +
geom_line(color = "blue") +
geom_point(color = "red") +
labs(title = "Yearly number of hail reports",
x = "Year",
y = "Report Number") +
theme_minimal() +
scale_x_discrete(breaks = seq(min(annual_reports_hail$year), max(annual_reports_hail$year), by = 5)) + # Show every 5th year
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) # Rotate and reduce font size
# Aggregate daily data into monthly totals
monthly_reports_hail <- hail_data %>%
mutate(year_month = floor_date(date, "month")) %>% # Create a year-month column
group_by(year_month) %>% # Group by year-month
summarise(total_reports = n(), .groups = "drop") # Sum reports for each month
# plot time series of total report
ggplot(monthly_reports_hail, aes(x = year_month, y = total_reports, group = 1)) +
geom_line(color = "blue") +
geom_point(color = "red") +
labs(title = "Monthly number of hail reports",
x = "Year",
y = "Report Number") +
theme_minimal() +
scale_x_date(breaks = seq(min(monthly_reports_hail$year_month), max(monthly_reports_hail$year_month), by = "5 years"), # Show every year
date_labels = "%Y") + # Format labels as years
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 8)) # Rotate and reduce font size
hail_data$MONTH <- month(hail_data$TIME_EVENT)
# Aggregate daily data into monthly totals
seasonality_reports_hail <- hail_data %>%
group_by(MONTH) %>% # Group by year-month
summarise(total_reports = n())
# Convert month numbers to month names
seasonality_reports_hail <- seasonality_reports_hail %>%
mutate(month_name = factor(MONTH, levels = 1:12, labels = month.name))
ggplot(seasonality_reports_hail, aes(x = month_name, y = total_reports)) +
geom_bar(stat = "identity", fill = "steelblue") +
geom_text(aes(label = total_reports), vjust = -0.5, color = "black") + # Add labels
labs(title = "Seasonal Cycle of Hail Reports",
x = "Month",
y = "Total Reports") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# annual reports by country
annual_reports_hail_by_country <- hail_data %>%
group_by(year, COUNTRY) %>%
summarise(reports = n(), .groups = 'drop')
ggplot(annual_reports_hail_by_country, aes(x = year, y = COUNTRY, fill = reports)) +
geom_tile() +
scale_fill_viridis_c(option = "plasma", direction = -1) +  # Usa una scala di colori
labs(title = "Annual number of hail reports by country",
x = "Year",
y = "Country",
fill = "Report number") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# using values from the database
#lon <- seq(from = min(floor(hail_data$LONGITUDE)), to = ceiling(max(hail_data$LONGITUDE)), by = 0.25)
#lat <- seq(from = min(floor(hail_data$LATITUDE)), to = max(ceiling(hail_data$LATITUDE)), by = 0.25)
# using the ERA5 grid
lon <- seq(from = -15, to = 25, by = 0.25)
lat <- seq(from = 35, to = 60, by = 0.25)
europe_bbox <- c(xmin = min(lon), xmax = max(lon), ymin = min(lat), ymax = max(lat))  # Longitude and latitude
# Map hail data onto the grid
grid <- expand.grid(lon = lon, lat = lat)
hail_sf <- st_as_sf(hail_data, coords = c("LONGITUDE", "LATITUDE"), crs = 4326)
grid_sf <- st_as_sf(grid, coords = c("lon", "lat"), crs = 4326)
nearest_grid_index <- st_nearest_feature(hail_sf, grid_sf)
hail_data$grid_index <- nearest_grid_index
# Calculate hail statistics
total_hail_counts <- hail_data %>%
group_by(grid_index) %>%
summarise(count = n())
grid_with_counts <- grid_sf %>%
mutate(grid_index = row_number()) %>%
left_join(total_hail_counts, by = "grid_index") %>%
mutate(lon = st_coordinates(.)[, 1],  # Extract longitude
lat = st_coordinates(.)[, 2])  # Extract latitude
#Create bins for counts
grid_with_counts <- grid_with_counts %>%
mutate(count_bin = cut(count,
breaks = c(0, 4, 9, 29, 49, 74, 99, 149, 299, Inf),
labels = c("1-4", "5-9", "10-29", "30-49", "50-74", "75-99", "100-149", "150-299", "300+")))
#Visualize the results
world_map <- ne_countries(scale = "medium", returnclass = "sf")
region_map <- st_crop(world_map, europe_bbox)
ggplot() +
geom_tile(data = grid_with_counts, aes(x = lon, y = lat, fill = count_bin), color = NA) +
geom_raster() +
scale_fill_viridis_d(option = "plasma", na.value = "white", direction = -1,
labels = c("1-4", "5-9", "10-29", "30-49", "50-74", "75-99", "100-149", "150-299", "300+"))+
borders("world", colour = "black") +
coord_sf(xlim = c(europe_bbox["xmin"], europe_bbox["xmax"]),
ylim = c(europe_bbox["ymin"], europe_bbox["ymax"])) +
labs(title = "Hail Reports on Regular 0.25-Degree Grid (Europe)",
x = "Longitude",
y = "Latitude",
fill = "Hail Reports Count") +
theme_minimal()
ggplot(annual_reports_hail_by_country, aes(x = year, y = COUNTRY, fill = reports)) +
geom_tile() +
scale_fill_viridis_c(option = "plasma", direction = -1) +  # Usa una scala di colori
labs(title = "Annual number of hail reports by country",
x = "Year",
y = "Country",
fill = "Report number") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
